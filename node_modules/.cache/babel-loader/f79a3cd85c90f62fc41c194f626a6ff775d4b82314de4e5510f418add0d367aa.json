{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joiss\\\\OneDrive\\\\Bureau\\\\users-managementteam\\\\Front_ESTIAM\\\\src\\\\contexts\\\\jwt-context.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer, useEffect, useCallback } from 'react';\nimport { usersApi } from '../api/users-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ActionType = /*#__PURE__*/function (ActionType) {\n  ActionType[\"INITIALIZE\"] = \"INITIALIZE\";\n  ActionType[\"LOGIN\"] = \"LOGIN\";\n  ActionType[\"LOGOUT\"] = \"LOGOUT\";\n  return ActionType;\n}(ActionType || {});\nconst initialState = {\n  isAuthenticated: false,\n  isInitialized: false,\n  user: null\n};\nconst handlers = {\n  INITIALIZE: (state, action) => {\n    const {\n      isAuthenticated,\n      user\n    } = action.payload;\n    return {\n      ...state,\n      isAuthenticated,\n      isInitialized: true,\n      user\n    };\n  },\n  LOGIN: (state, action) => {\n    const {\n      user\n    } = action.payload;\n    return {\n      ...state,\n      isAuthenticated: true,\n      user\n    };\n  },\n  LOGOUT: state => ({\n    ...state,\n    isAuthenticated: false,\n    user: null\n  })\n};\nconst reducer = (state, action) => handlers[action.type] ? handlers[action.type](state, action) : state;\nexport const AuthContext = /*#__PURE__*/createContext({\n  ...initialState,\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve()\n});\nexport const AuthProvider = props => {\n  _s();\n  const {\n    children\n  } = props;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const initialize = useCallback(async () => {\n    try {\n      const accessToken = globalThis.localStorage.getItem('ACCESS_TOKEN');\n      if (accessToken) {\n        const userProfile = await usersApi.getUserWithSession(accessToken);\n        dispatch({\n          type: ActionType.INITIALIZE,\n          payload: {\n            isAuthenticated: true,\n            user: userProfile\n          }\n        });\n      } else {\n        dispatch({\n          type: ActionType.INITIALIZE,\n          payload: {\n            isAuthenticated: false,\n            user: null\n          }\n        });\n      }\n    } catch (e) {\n      dispatch({\n        type: ActionType.INITIALIZE,\n        payload: {\n          isAuthenticated: false,\n          user: null\n        }\n      });\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    initialize();\n  }, []);\n  const login = useCallback(async (email, password) => {\n    const userResponse = await usersApi.login(email, password);\n    if ('access_token' in userResponse && userResponse.access_token) {\n      const userProfile = await usersApi.getUserWithSession(userResponse.access_token);\n      globalThis.localStorage.setItem('ACCESS_TOKEN', userResponse.access_token);\n      dispatch({\n        type: ActionType.LOGIN,\n        payload: {\n          user: userProfile\n        }\n      });\n    } else {\n      throw Error();\n    }\n  }, [dispatch]);\n  const logout = useCallback(async () => {\n    localStorage.removeItem('ACCESS_TOKEN');\n    dispatch({\n      type: ActionType.LOGOUT\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"gGlWxRlEGE/eTNLs0UwFcpaV+xE=\");\n_c = AuthProvider;\nexport const AuthConsumer = AuthContext.Consumer;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","useCallback","usersApi","jsxDEV","_jsxDEV","ActionType","initialState","isAuthenticated","isInitialized","user","handlers","INITIALIZE","state","action","payload","LOGIN","LOGOUT","reducer","type","AuthContext","login","Promise","resolve","logout","AuthProvider","props","_s","children","dispatch","initialize","accessToken","globalThis","localStorage","getItem","userProfile","getUserWithSession","e","email","password","userResponse","access_token","setItem","Error","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","AuthConsumer","Consumer","$RefreshReg$"],"sources":["C:/Users/joiss/OneDrive/Bureau/users-managementteam/Front_ESTIAM/src/contexts/jwt-context.tsx"],"sourcesContent":["import React, {createContext, useReducer, useEffect, useCallback} from 'react';\r\nimport type { FC, ReactNode } from 'react';\r\nimport { User } from '../types/User';\r\nimport {usersApi} from '../api/users-api';\r\n\r\ninterface State {\r\n  isAuthenticated: boolean;\r\n  isInitialized: boolean;\r\n  user: User | null;\r\n}\r\n\r\nenum ActionType {\r\n  INITIALIZE = 'INITIALIZE',\r\n  LOGIN = 'LOGIN',\r\n  LOGOUT = 'LOGOUT',\r\n}\r\n\r\ntype InitializeAction = {\r\n  type: ActionType.INITIALIZE,\r\n  payload: {\r\n    isAuthenticated: boolean;\r\n    user: User | null;\r\n  }\r\n}\r\n\r\ntype LoginAction = {\r\n  type: ActionType.LOGIN,\r\n  payload: {\r\n    user: User;\r\n  }\r\n}\r\n\r\ntype LogoutAction = {\r\n  type: ActionType.LOGOUT;\r\n};\r\n\r\ntype Action = InitializeAction | LoginAction | LogoutAction;\r\n\r\ntype Handler = (state: State, action: any) => State;\r\n\r\nconst initialState: State = {\r\n  isAuthenticated: false,\r\n  isInitialized: false,\r\n  user: null,\r\n};\r\n\r\nconst handlers: Record<ActionType, Handler> = {\r\n  INITIALIZE: (state: State, action: InitializeAction): State => {\r\n    const { isAuthenticated, user } = action.payload;\r\n\r\n    return {\r\n      ...state,\r\n      isAuthenticated,\r\n      isInitialized: true,\r\n      user\r\n    };\r\n  },\r\n  LOGIN: (state: State, action: LoginAction): State => {\r\n    const { user } = action.payload;\r\n\r\n    return {\r\n      ...state,\r\n      isAuthenticated: true,\r\n      user\r\n    };\r\n  },\r\n  LOGOUT: (state: State): State => ({\r\n    ...state,\r\n    isAuthenticated: false,\r\n    user: null,\r\n  }),\r\n}\r\n\r\nconst reducer = (state: State, action: Action): State =>\r\n  handlers[action.type] ? handlers[action.type](state, action) : state;\r\n\r\nexport interface AuthContextValue extends State {\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextValue>({\r\n  ...initialState,\r\n  login: () => Promise.resolve(),\r\n  logout: () => Promise.resolve(),\r\n});\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: FC<AuthProviderProps> = (props) => {\r\n  const { children } = props;\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const initialize = useCallback(async () => {\r\n    try {\r\n      const accessToken = globalThis.localStorage.getItem('ACCESS_TOKEN');\r\n\r\n      if (accessToken) {\r\n        const userProfile = await usersApi.getUserWithSession(accessToken);\r\n\r\n        dispatch({\r\n          type: ActionType.INITIALIZE,\r\n          payload: {\r\n            isAuthenticated: true,\r\n            user: userProfile\r\n          }\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: ActionType.INITIALIZE,\r\n          payload: {\r\n            isAuthenticated: false,\r\n            user: null\r\n          }\r\n        });\r\n      }\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ActionType.INITIALIZE,\r\n        payload: {\r\n          isAuthenticated: false,\r\n          user: null\r\n        }\r\n      });\r\n    }\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    initialize();\r\n  }, []);\r\n\r\n  const login = useCallback(async (email: string, password: string): Promise<void> => {\r\n    const userResponse = await usersApi.login(email, password);\r\n\r\n    if ('access_token' in userResponse && userResponse.access_token) {\r\n      const userProfile = await usersApi.getUserWithSession(userResponse.access_token);\r\n\r\n      globalThis.localStorage.setItem('ACCESS_TOKEN', userResponse.access_token);\r\n\r\n      dispatch({\r\n        type: ActionType.LOGIN,\r\n        payload: {\r\n          user: userProfile\r\n        }\r\n      });\r\n    } else {\r\n      throw Error();\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const logout = useCallback(async (): Promise<void> => {\r\n    localStorage.removeItem('ACCESS_TOKEN');\r\n    dispatch({ type: ActionType.LOGOUT });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...state,\r\n        login,\r\n        logout\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const AuthConsumer = AuthContext.Consumer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}