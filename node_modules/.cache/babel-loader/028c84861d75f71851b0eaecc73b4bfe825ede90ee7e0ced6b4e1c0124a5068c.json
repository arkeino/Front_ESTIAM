{"ast":null,"code":"import axios from 'axios';\nclass UsersApi {\n  async makeRequest(config) {\n    try {\n      const response = await axios({\n        ...config\n      });\n      return response.data;\n    } catch (e) {\n      var _e$response, _e$response$data;\n      return {\n        error: true,\n        message: e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message\n      };\n    }\n  }\n  async getUsers() {\n    return this.makeRequest({\n      method: 'GET',\n      url: 'https://api.escuelajs.co/api/v1/users'\n    });\n  }\n  async getUserById(id) {\n    return this.makeRequest({\n      method: 'GET',\n      url: `https://api.escuelajs.co/api/v1/users/${id}`\n    });\n  }\n  async updateUser(id, user) {\n    return this.makeRequest({\n      method: 'PUT',\n      url: `https://api.escuelajs.co/api/v1/users/${id}`,\n      data: user\n    });\n  }\n  async createUser(user) {\n    return this.makeRequest({\n      method: 'POST',\n      url: `https://api.escuelajs.co/api/v1/users`,\n      data: user\n    });\n  }\n  async deleteUser(id) {\n    return this.makeRequest({\n      method: 'DELETE',\n      url: `https://api.escuelajs.co/api/v1/users/${id}`\n    });\n  }\n  async login(email, password) {\n    return this.makeRequest({\n      method: 'POST',\n      url: `https://api.escuelajs.co/api/v1/auth/login`,\n      data: {\n        email,\n        password\n      }\n    });\n  }\n  async getUserWithSession(accessToken) {\n    return this.makeRequest({\n      method: 'GET',\n      url: 'https://api.escuelajs.co/api/v1/auth/profile',\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n  }\n}\nexport const usersApi = new UsersApi();","map":{"version":3,"names":["axios","UsersApi","makeRequest","config","response","data","e","_e$response","_e$response$data","error","message","getUsers","method","url","getUserById","id","updateUser","user","createUser","deleteUser","login","email","password","getUserWithSession","accessToken","headers","Authorization","usersApi"],"sources":["C:/Users/joiss/OneDrive/Bureau/users-managementteam/Front_ESTIAM/src/api/users-api.ts"],"sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\r\nimport { User } from '../types/User';\r\nimport { Error } from '../types/Error';\r\n\r\nclass UsersApi {\r\n  private async makeRequest(config: AxiosRequestConfig): Promise<any> {\r\n    try {\r\n      const response = await axios({ ...config });\r\n      return response.data;\r\n    } catch (e: any) {\r\n      return {\r\n        error: true,\r\n        message: e?.response?.data?.message,\r\n      };\r\n    }\r\n  }\r\n\r\n  async getUsers(): Promise<User[]> {\r\n    return this.makeRequest({\r\n      method: 'GET',\r\n      url: 'https://api.escuelajs.co/api/v1/users',\r\n    });\r\n  }\r\n\r\n  async getUserById(id: string): Promise<User> {\r\n    return this.makeRequest({\r\n      method: 'GET',\r\n      url: `https://api.escuelajs.co/api/v1/users/${id}`,\r\n    });\r\n  }\r\n\r\n  async updateUser(id: number, user: User): Promise<User | Error> {\r\n    return this.makeRequest({\r\n      method: 'PUT',\r\n      url: `https://api.escuelajs.co/api/v1/users/${id}`,\r\n      data: user,\r\n    });\r\n  }\r\n\r\n  async createUser(user: User): Promise<User | Error> {\r\n    return this.makeRequest({\r\n      method: 'POST',\r\n      url: `https://api.escuelajs.co/api/v1/users`,\r\n      data: user,\r\n    });\r\n  }\r\n\r\n  async deleteUser(id: number): Promise<User | Error> {\r\n    return this.makeRequest({\r\n      method: 'DELETE',\r\n      url: `https://api.escuelajs.co/api/v1/users/${id}`,\r\n    });\r\n  }\r\n\r\n  async login(email: string, password: string): Promise<{ access_token: string } | Error> {\r\n    return this.makeRequest({\r\n      method: 'POST',\r\n      url: `https://api.escuelajs.co/api/v1/auth/login`,\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n  }\r\n\r\n  async getUserWithSession(accessToken: string): Promise<User> {\r\n    return this.makeRequest({\r\n      method: 'GET',\r\n      url: 'https://api.escuelajs.co/api/v1/auth/profile',\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport const usersApi = new UsersApi();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAA8B,OAAO;AAIjD,MAAMC,QAAQ,CAAC;EACb,MAAcC,WAAWA,CAACC,MAA0B,EAAgB;IAClE,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAAC;QAAE,GAAGG;MAAO,CAAC,CAAC;MAC3C,OAAOC,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAOC,CAAM,EAAE;MAAA,IAAAC,WAAA,EAAAC,gBAAA;MACf,OAAO;QACLC,KAAK,EAAE,IAAI;QACXC,OAAO,EAAEJ,CAAC,aAADA,CAAC,wBAAAC,WAAA,GAADD,CAAC,CAAEF,QAAQ,cAAAG,WAAA,wBAAAC,gBAAA,GAAXD,WAAA,CAAaF,IAAI,cAAAG,gBAAA,uBAAjBA,gBAAA,CAAmBE;MAC9B,CAAC;IACH;EACF;EAEA,MAAMC,QAAQA,CAAA,EAAoB;IAChC,OAAO,IAAI,CAACT,WAAW,CAAC;MACtBU,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE;IACP,CAAC,CAAC;EACJ;EAEA,MAAMC,WAAWA,CAACC,EAAU,EAAiB;IAC3C,OAAO,IAAI,CAACb,WAAW,CAAC;MACtBU,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,yCAAwCE,EAAG;IACnD,CAAC,CAAC;EACJ;EAEA,MAAMC,UAAUA,CAACD,EAAU,EAAEE,IAAU,EAAyB;IAC9D,OAAO,IAAI,CAACf,WAAW,CAAC;MACtBU,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,yCAAwCE,EAAG,EAAC;MAClDV,IAAI,EAAEY;IACR,CAAC,CAAC;EACJ;EAEA,MAAMC,UAAUA,CAACD,IAAU,EAAyB;IAClD,OAAO,IAAI,CAACf,WAAW,CAAC;MACtBU,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,uCAAsC;MAC5CR,IAAI,EAAEY;IACR,CAAC,CAAC;EACJ;EAEA,MAAME,UAAUA,CAACJ,EAAU,EAAyB;IAClD,OAAO,IAAI,CAACb,WAAW,CAAC;MACtBU,MAAM,EAAE,QAAQ;MAChBC,GAAG,EAAG,yCAAwCE,EAAG;IACnD,CAAC,CAAC;EACJ;EAEA,MAAMK,KAAKA,CAACC,KAAa,EAAEC,QAAgB,EAA6C;IACtF,OAAO,IAAI,CAACpB,WAAW,CAAC;MACtBU,MAAM,EAAE,MAAM;MACdC,GAAG,EAAG,4CAA2C;MACjDR,IAAI,EAAE;QACJgB,KAAK;QACLC;MACF;IACF,CAAC,CAAC;EACJ;EAEA,MAAMC,kBAAkBA,CAACC,WAAmB,EAAiB;IAC3D,OAAO,IAAI,CAACtB,WAAW,CAAC;MACtBU,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,8CAA8C;MACnDY,OAAO,EAAE;QACPC,aAAa,EAAG,UAASF,WAAY;MACvC;IACF,CAAC,CAAC;EACJ;AACF;AAEA,OAAO,MAAMG,QAAQ,GAAG,IAAI1B,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}